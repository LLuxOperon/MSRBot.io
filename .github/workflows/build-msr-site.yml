name: Build MSRBot.io Site and Test

on:
  workflow_run:
    workflows: ["Build MasterReference Index"]
    types: [completed]
  workflow_dispatch:

permissions:
  contents: write 

concurrency:
  group: msr-site-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    if: >
      github.event_name != 'workflow_run' || 
      github.event.workflow_run.conclusion == 'success'
    name: Build MSR
    runs-on: ubuntu-latest
    env:
      CI: true

    steps:
      - name: Check upstream PR marker
        id: guard
        if: github.event_name == 'workflow_run'
        uses: actions/github-script@v7
        with:
          script: |
            const run = context.payload.workflow_run;
            const { owner, repo } = context.repo;

            // Helper to set outputs and log
            function set(skip, prNum, reason) {
              core.info(`skip-site-build artifact present: ${skip && prNum ? `true (PR #${prNum})` : 'false'}`);
              if (reason) core.info(`Skip reason: ${reason}${prNum ? ` (PR #${prNum})` : ''}`);
              core.setOutput('skip', skip ? 'true' : 'false');
              core.setOutput('pr', prNum || '');
            }

            // 1) If not a workflow_run, never skip here
            if (!run) { set(false, '', 'not a workflow_run'); return; }

            // 2) First try: upstream run artifact marker from MRI
            const artifacts = await github.paginate(
              github.rest.actions.listWorkflowRunArtifacts,
              { owner, repo, run_id: run.id, per_page: 100 }
            );
            const marker = artifacts.find(a => a.name && a.name.startsWith('skip-site-build-pr-'));
            const prMatch = marker && /^skip-site-build-pr-(\d+)$/.test(marker.name)
              ? marker.name.match(/^skip-site-build-pr-(\d+)$/)[1]
              : '';

            if (marker && prMatch) { set(true, prMatch, 'upstream MRI provided skip marker'); return; }

            // 3) Edge case coverage: MSI created a PR but MRI did not.
            // Look for ANY open PR with label 'msi' or 'mri'. If found, skip.
            async function findOpenLabeledPR(label) {
              const q = `repo:${owner}/${repo} is:pr is:open label:${label}`;
              const res = await github.rest.search.issuesAndPullRequests({ q, per_page: 10, sort: 'updated', order: 'desc' });
              const item = (res.data.items || [])[0];
              if (!item) return null;
              // Ensure it's a PR by fetching it
              const pr = await github.rest.pulls.get({ owner, repo, pull_number: item.number }).catch(() => null);
              return pr?.data || null;
            }

            const msiPR = await findOpenLabeledPR('msi');
            if (msiPR) { set(true, String(msiPR.number), 'open MSI PR detected'); return; }

            const mriPR = await findOpenLabeledPR('mri');
            if (mriPR) { set(true, String(mriPR.number), 'open MRI PR detected'); return; }

            // 4) Nothing to skip
            set(false, '', 'no marker and no open MSI/MRI PRs');

      - name: Skipping site build (upstream PR open)
        if: steps.guard.outputs.skip == 'true'
        run: |
          echo "⏭️  Skipping MSR site build because upstream workflow opened PR #${{ steps.guard.outputs.pr }}."

      - name: Write downstream skip marker
        if: steps.guard.outputs.skip == 'true'
        run: |
          mkdir -p .emit
          echo "MSR site build skipped due to upstream PR #${{ steps.guard.outputs.pr }} (run ${{ github.run_id }})" > .emit/skip-site-build.txt

      - name: Upload skip marker artifact for downstream
        if: steps.guard.outputs.skip == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: skip-site-build-pr-${{ steps.guard.outputs.pr }}
          path: .emit/skip-site-build.txt
          retention-days: 3

      - uses: actions/checkout@v4
        if: steps.guard.outputs.skip != 'true'
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        if: steps.guard.outputs.skip != 'true'
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install
        if: steps.guard.outputs.skip != 'true'
        run: npm ci

      - name: Validate registries
        if: steps.guard.outputs.skip != 'true'
        run: npm run validate

      - name: Canonicalize registries (no-op if clean)
        if: steps.guard.outputs.skip != 'true'
        run: |
          npm run canonicalize
          git add src/main/data
          if git diff --cached --quiet; then
            echo "No canonicalization changes."
          else
            git config user.name 'github-actions[bot]'
            git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git commit -m "chore: canonicalize registries"
            git push
          fi

      - name: Build site
        if: steps.guard.outputs.skip != 'true'
        env:
          GH_PAGES_BUILD: true
        run: npm run build

      - name: Generate API stats
        if: steps.guard.outputs.skip != 'true'
        run: |
          mkdir -p build/api
          node src/main/scripts/utils/buildStats.js
          cp tools/apiViewer.html build/api/viewer.html

      - name: Add CNAME for custom domain
        if: steps.guard.outputs.skip != 'true'
        run: echo 'msrbot.io' > ./build/CNAME

      - name: Publish to gh-pages
        if: steps.guard.outputs.skip != 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          keep_files: true
          # optional hardening:
          # publish_branch: gh-pages
          # force_orphan: true